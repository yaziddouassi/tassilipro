<template>
  <div class="w-full mb-[5px]">
    <div>
       <span class="font-bold"> {{  tassiliInput.form[props.cle]['options']['label']}}</span>
    </div>

    <div>
      <select
        class="w-full bg-[#555] text-white h-[50px] border-[#666] border-[1px]
        text-center"
        v-model="tassiliInput.form[props.cle]['value']"
      >
        <option value="">-- Select --</option>
        <option
          v-for="(option, index) in tassiliInput.form[props.cle]['options']?.contents || []"
          :key="option"
          :value="option"
        >
          {{ tassiliInput.form[props.cle]['options']?.labels[index] }}
        </option>
      </select>
    </div>

    
    <div v-if="tassiliInput.errors[cle]" class="text-[red]">{{ tassiliInput.errors[cle] }}</div>
  </div>
</template>

<script setup>
import { watch } from 'vue'
import {TassiliInput} from '@/Vendor/TassiliLibs/stores/tassiliInput'

const props = defineProps({
  cle : {
    type :  String
  },
});


const tassiliInput = TassiliInput();

// Vérification au chargement et à chaque changement
watch(
  () => tassiliInput.form[props.cle]['value'],
  (newValue) => {
    const options = tassiliInput.form[props.cle]['options']?.contents || []
    if (!options.includes(newValue)) {
      tassiliInput.form[props.cle]['value'] = ''
    }
  },
  { immediate: true }
)
</script>