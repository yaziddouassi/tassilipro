<template>
    <div class="w-full mb-[5px]">
      <div>
        <span class="font-bold"> {{  tassiliInput.form[props.cle]['options']['label']}}</span>

      </div>
  
      <div class="space-y-2">
        <div
          v-for="(option, index) in tassiliInput.form[props.cle]['options'].contents"
          :key="option"
          class="flex items-center gap-2"
        >
          <input
            :disabled="tassiliInput.form[props.cle]['options']['readOnly'] === 'yes'"
            type="radio"
            :id="`${props.cle}-${index}`"
            :name="props.cle"
            :value="option"
            v-model="tassiliInput.form[props.cle]['value']"
            class="accent-darkblue"
          />
          <label :for="`${props.cle}-${index}`">
            {{ tassiliInput.form[props.cle]['options'].labels[index] }}
          </label>
        </div>
      </div>
  
     <div v-if="tassiliInput.errors[cle]" class="text-[red]">{{ tassiliInput.errors[cle] }}</div>

    </div>
  </template>
  
  <script setup>
  import { watch } from 'vue'
import {TassiliInput} from '@/Vendor/TassiliLibs/stores/tassiliInput'

const props = defineProps({
  cle : {
    type :  String
  },
});


const tassiliInput = TassiliInput();

// Vérification au chargement et à chaque changement
watch(
  () => tassiliInput.form[props.cle]['value'],
  (newValue) => {
    const options = tassiliInput.form[props.cle]['options']?.contents || []
    if (!options.includes(newValue)) {
      tassiliInput.form[props.cle]['value'] = ''
    }
  },
  { immediate: true }
)

</script>