<template>
  <div class="w-full mb-[5px]">
    <div>
       <span class="font-bold"> {{  tassiliInput.form[props.cle]['fields'][props.cle3]['options']['label']}}</span>
    </div>

    <div>
      <select
        class="w-full bg-[#555] text-white h-[50px] border-[darkblue] border-[1px]
        text-center"
        :disabled="tassiliInput.form[props.cle]['fields'][props.cle3]['options']['readOnly'] === 'yes'"
        v-model="tassiliInput.form[props.cle]['value'][props.cle2][props.cle3]"
      >
        <option value="">-- Select --</option>
        <option
          v-for="(option, index) in tassiliInput.form[props.cle]['fields'][props.cle3]['options']['contents']"
          :key="option"
          :value="option"
        >
          {{ tassiliInput.form[props.cle]['fields'][props.cle3]['options']['labels'][index] }}
        </option>
      </select>
    </div>

    
     <div v-if="tassiliInput.errors[`${props.cle}.${props.cle2}.${props.cle3}`]" class="text-[red]">
           {{ tassiliInput.errors[`${props.cle}.${props.cle2}.${props.cle3}`] }}
      </div>

  </div>
</template>

<script setup>
import { watch } from 'vue'
import {TassiliInput} from '@/Vendor/TassiliLibs/stores/tassiliInput'

const props = defineProps({
  cle : {
    type :  String
  },
  cle2 : {
    type :  Number
  },
  cle3 : {
    type :  String
  },
});


const tassiliInput = TassiliInput();

// Vérification au chargement et à chaque changement
watch(
  () => tassiliInput.form[props.cle]['value'][props.cle2][props.cle3],
  (newValue) => {
    const options = tassiliInput.form[props.cle]['fields'][props.cle3]['options']['contents']
    if (!options.includes(newValue)) {
      tassiliInput.form[props.cle]['value'][props.cle2][props.cle3] = ''
    }
  },
  { immediate: true }
)
</script>