<script setup>
import { Link } from '@inertiajs/vue3'
import { computed } from 'vue'

defineProps({
  pagination: Object
})

const currentUrl = computed(() => new URL(window.location.href))
const currentQueryParams = computed(() => {
  const params = new URLSearchParams(currentUrl.value.search)
  params.delete('page')
  return params
})

const mergeQuery = (url) => {
  if (!url) return ''

  const parsedUrl = new URL(url, window.location.origin)
  const newParams = new URLSearchParams(parsedUrl.search)

  // Ne pas écraser les paramètres déjà présents
  for (const [key, value] of currentQueryParams.value.entries()) {
    if (!newParams.has(key)) {
      newParams.set(key, value)
    }
  }

  parsedUrl.search = newParams.toString()
  return parsedUrl.pathname + parsedUrl.search
}
</script>

<template>
  <div class="relative flex flex-wrap justify-center gap-[2px] m-auto mt-[15px] p-[5px] max-w-[1000px]">
    <template v-for="link in pagination.links" :key="link.label">
      <Link
        preserve-state
        preserve-scroll
        :href="mergeQuery(link.url)"
        v-html="link.label"
        class="flex items-center justify-center px-3 py-2 text-sm rounded-lg text-gray-600 border border-grey"
        :class="{
          'bg-blue-700 text-white': link.active,
          '!text-gray-300': !link.url
        }"
      />
    </template>
  </div>
</template>